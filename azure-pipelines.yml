name: $(SourceBranchName).$(Rev:r)
pool:
  vmImage: ubuntu-latest
trigger:
   - main
   - homolog
   - develop
variables:
  - group: var-static-app
stages:
  - stage: CI
    displayName: "Integração Continua"
    jobs:
      - job: ContinuosIntegration
        displayName: CI
        steps:
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
          - task: PublishBuildArtifacts@1
  - stage: Validation
    displayName: "Validação"
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
    dependsOn: CI
    jobs:
      - job: validaton
        displayName: 'Manual Validation'
        pool: server
        steps:
            - task: ManualValidation@1
              timeoutInMinutes: 770
              inputs:
                instructions: "Deseja realizar a publicação agora?"
                notifyUsers: 'pedro.maia@syslion.com.br'
                approvers: 'pedro.maia@syslion.com.br' 
  - stage: DeployDev
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/develop'))
    dependsOn: CI
    jobs:
      - job: cd
        displayName: "Deploy Dev"
        steps:
        - task: AzureStaticWebApp@0
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)'
            app_location: '/'
            skip_app_build: true
            azure_static_web_apps_api_token: '$(TokenDeployDev)'
  - stage: DeployPrd
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
    dependsOn: Validation
    jobs:
      - job: cd
        displayName: CD
        steps:
        - task: AzureStaticWebApp@0
          inputs:
            workingDirectory: '$(Build.SourcesDirectory)'
            app_location: '/'
            skip_app_build: true
            azure_static_web_apps_api_token: '$(TokenDeployPRD)'
